---
import markdownit from 'markdown-it';
import Layout from '../../layouts/Slide.astro';
import { getCollection } from 'astro:content';
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
	const slides = await getCollection('slides');
	return slides.map((entry) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}
// 2. For your template, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content } = await entry.render();

const md = markdownit({ html: true, breaks: true });
let title;
if (entry.data.multilineTitle) {
	title = md.render(entry.data.title);
} else {
	title = md.renderInline(entry.data.title);
}
---

<Layout
	title={title}
	animation={entry.data.animation}
	align={entry.data.align}
	noJustifyItems={entry.data.noJustifyItems}
	renderBlocking={entry.data.renderBlocking}
>
	<h1 set:html={title} class:list={[{
		'h0': entry.data.bigTitle,
		'h2': entry.data.smallTitle,
		'visually-hidden': entry.data.visuallyHiddenTitle,
	}]} />
	<div class={entry.data.noFlow ? "content" : "content flow"}><Content /></div>
</Layout>