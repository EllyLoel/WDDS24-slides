---
export interface Props {
	prevHref: string;
	nextHref: string;
}

const { prevHref, nextHref } = Astro.props;
---

<nav class="controls">
	{prevHref && (<a href={prevHref}>
		<span class="visually-hidden">Previous slide</span>
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512">
			<!--!Font Awesome Free 6.6.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
			<path
				d="M41.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.3 256 246.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"
			>
			</path>
		</svg>
	</a>)}
	{nextHref && (<a href={nextHref}>
		<span class="visually-hidden">Next slide</span>
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512">
			<!--!Font Awesome Free 6.6.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
			<path
				d="M278.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-160 160c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L210.7 256 73.4 118.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l160 160z"
			>
			</path>
		</svg>
	</a>)}
</nav>

<script is:inline define:vars={{ prevHref, nextHref }}>
	if (nextHref) {
		const prefetchLink = document.createElement('link');
		prefetchLink.rel = 'prefetch';
		prefetchLink.href = `${nextHref}`;
		document.head.appendChild(prefetchLink);
	}

	window.addEventListener('keydown', (e) => {
		if (e.key === 'ArrowLeft' || e.key === 'PageUp') {
			if (!prevHref) return;
			window.location = `${prevHref}`;
		}
		if (e.key === 'ArrowRight' || e.key === 'PageDown') {
			if (!nextHref) return;
			window.location = `${nextHref}`;
		}
	});
</script>

<style>
	.controls {
		view-transition-name: slide-controls;
		margin: var(--size-fluid-3);
	}

	.controls > a {
		display: flex;
		align-items: center;
		border-radius: var(--radius-round);
		margin: 0;
		padding: var(--size-2);
	}

	.controls > a > svg {
		fill: currentColor;
		aspect-ratio: var(--ratio-square);
		inline-size: var(--size-7);
	}

	.controls > :is(a:hover, a:visited) {
		color: var(--text-2);
	}

	.controls > a:hover {
		box-shadow: 0 0 0 2px var(--brand);
	}
</style>
